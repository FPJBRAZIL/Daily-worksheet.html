<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Daily Worksheet - Tablet</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            -webkit-tap-highlight-color: transparent;
        }

        body {
            background-color: #f0f2f5;
            padding: 16px;
            min-height: 100vh;
        }

        .container {
            max-width: 100%;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 16px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .header {
            text-align: center;
            margin-bottom: 24px;
            padding: 24px;
            background-color: #f8f9fa;
            border-radius: 12px;
        }

        .header h1 {
            font-size: 28px;
            margin-bottom: 12px;
            color: #1a1a1a;
        }

        .header p {
            font-size: 18px;
            color: #666;
        }

        .upload-section {
            text-align: center;
            padding: 32px;
            border: 3px dashed #ccc;
            border-radius: 12px;
            margin-bottom: 24px;
            background-color: #fff;
            touch-action: manipulation;
        }

        .button {
            background-color: #0066cc;
            color: white;
            padding: 16px 32px;
            border: none;
            border-radius: 12px;
            cursor: pointer;
            font-size: 20px;
            margin: 12px;
            min-width: 200px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 12px;
            touch-action: manipulation;
            -webkit-appearance: none;
            transition: transform 0.2s;
        }

        .button:active {
            transform: scale(0.98);
        }

        .button.whatsapp {
            background-color: #25D366;
        }

        .message-preview {
            background: white;
            padding: 24px;
            border: 2px solid #ddd;
            border-radius: 12px;
            margin-top: 20px;
            font-size: 18px;
            line-height: 1.6;
            white-space: pre-wrap;
        }

        .preview {
            margin-top: 24px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 12px;
        }

        .preview h3 {
            font-size: 22px;
            margin-bottom: 16px;
            color: #1a1a1a;
        }

        .file-info {
            margin-top: 16px;
            padding: 12px;
            background-color: #e9ecef;
            border-radius: 8px;
            font-size: 16px;
            color: #495057;
        }

        .status {
            padding: 16px;
            margin: 16px 0;
            border-radius: 8px;
            font-size: 18px;
            text-align: center;
        }

        .status.success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .status.error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .action-buttons {
            display: flex;
            flex-direction: column;
            gap: 16px;
            margin-top: 24px;
        }

        @media (max-width: 768px) {
            .container {
                padding: 16px;
            }

            .button {
                width: 100%;
                padding: 20px;
                font-size: 18px;
            }

            .message-preview {
                font-size: 16px;
                padding: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Daily Worksheet</h1>
            <p>Toque para selecionar a planilha</p>
        </div>

        <div class="upload-section" onclick="document.getElementById('excel-upload').click()">
            <input type="file" id="excel-upload" accept=".xlsx,.xls" style="display: none;">
            <button class="button">
                ðŸ“Ž Selecionar Planilha
            </button>
            <div id="file-name" class="file-info"></div>
        </div>

        <div id="preview" class="preview" style="display: none;">
            <h3>Mensagem Formatada:</h3>
            <div id="message-preview" class="message-preview"></div>
            
            <div class="action-buttons">
                <button class="button whatsapp" onclick="shareViaWhatsApp()">
                    ðŸ’¬ Enviar via WhatsApp
                </button>
                <button class="button" onclick="copiarMensagem()">
                    ðŸ“‹ Copiar Mensagem
                </button>
            </div>
        </div>
    </div>

    <script>
        let processedData = null;
        let lastMessage = '';

        document.getElementById('excel-upload').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                document.getElementById('file-name').textContent = 'Processando: ' + file.name;
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    try {
                        const data = new Uint8Array(e.target.result);
                        const workbook = XLSX.read(data, { type: 'array' });
                        const worksheet = workbook.Sheets[workbook.SheetNames[0]];
                        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });

                        processedData = {
                            date: jsonData[1]?.[0] || '',
                            customer: jsonData[1]?.[1] || '',
                            teamMembers: [],
                            containers: []
                        };

                        // Processa membros da equipe
                        for (let i = 3; i < 13; i++) {
                            if (jsonData[i]?.[0] && jsonData[i]?.[1]) {
                                processedData.teamMembers.push({
                                    lastName: jsonData[i][0],
                                    firstName: jsonData[i][1]
                                });
                            }
                        }

                        // Processa containers
                        for (let i = 14; i < jsonData.length; i++) {
                            if (jsonData[i]?.[2]) {
                                processedData.containers.push({
                                    size: jsonData[i][2],
                                    cartonCount: jsonData[i][3] || 0,
                                    batches: jsonData[i][4] || 0
                                });
                            }
                        }

                        displayMessage();
                        mostrarStatus('Planilha processada com sucesso!', 'success');
                    } catch (error) {
                        console.error('Erro ao processar arquivo:', error);
                        mostrarStatus('Erro ao processar arquivo. Verifique o formato.', 'error');
                    }
                };
                reader.readAsArrayBuffer(file);
            }
        });

        function calculateContainerValue(container) {
            if (container.size === '20') return 150;
            return parseInt(container.cartonCount) > 5000 ? 400 : 350;
        }

        function calculateTotal(containers) {
            return containers.reduce((sum, container) => 
                sum + calculateContainerValue(container), 0);
        }

        function formatMessage(data) {
            let message = `${data.date}\n${data.customer}\n\n`;
            
            data.containers.forEach(container => {
                const value = calculateContainerValue(container);
                message += `1x${container.size} - ${container.cartonCount}ctns/${container.batches}skus:$${value}\n`;
            });

            const total = calculateTotal(data.containers);
            message += `\nTotal:$${total}\n\n`;

            const memberValue = Math.floor(total / data.teamMembers.length);
            data.teamMembers.forEach(member => {
                message += `${member.firstName} ${member.lastName}:$${memberValue}\n`;
            });

            return message;
        }

        function displayMessage() {
            lastMessage = formatMessage(processedData);
            document.getElementById('message-preview').textContent = lastMessage;
            document.getElementById('preview').style.display = 'block';
        }

        function shareViaWhatsApp() {
            if (!processedData) return;
            window.open(`https://wa.me/?text=${encodeURIComponent(lastMessage)}`);
        }

        function copiarMensagem() {
            if (!lastMessage) return;
            navigator.clipboard.writeText(lastMessage)
                .then(() => mostrarStatus('Mensagem copiada!', 'success'))
                .catch(() => mostrarStatus('Erro ao copiar mensagem', 'error'));
        }

        function mostrarStatus(mensagem, tipo) {
            const statusDiv = document.createElement('div');
            statusDiv.className = `status ${tipo}`;
            statusDiv.textContent = mensagem;
            
            const preview = document.getElementById('preview');
            preview.insertBefore(statusDiv, preview.firstChild);
            
            setTimeout(() => statusDiv.remove(), 3000);
        }
    </script>
</body>
</html>
